---------- TODO ----------
- Da fare prova caricando il backend su un cloud (Per questa prova non fare https e quindi non usare nginx, ma server wsgi di produzione)
- Connettere flask e sqlite3: https://flask.palletsprojects.com/en/stable/patterns/sqlite3/?utm_source=chatgpt.com
- Creare db ed app flask con gunicorn WSGI e conneterlo all' app (solo ambiente di sviluppo locale al momento)
    Avevo chiesto a chatGPT, mi sembra che la sua soluzione con Nginx per fare da web server che gestisce
    HTTPS con il server gunicorn che usa l' app flask + sqlite mi sembra lightweight. Usando un dominio gratis
    con duckDNS ho gratis la certificazione HTTPS (siccome necessita' di un dominio)
    Inoltre suggeriva che Oracle Cloud provvede dei servizi di VPS gratuiti per sempre (solo con piano free)

- Provare expo-notifications

- Autenticazione JWT (JSON Web Token)

- Sistemare la navigazione app.
Se si va nel menu principale lo stack deve essere limitato a quella sola pagina.
Le altre pagine invece dovrebbero avere la possibilita' di tornare indietro 
(quindi vanno "impilate" sullo stack) 
almeno con il tasto del sistema operativo.

- Nell' app quando si vuole inviare un messaggio bisogna mettere delle check box e non radio
in modo da poter inviare a piu' gruppi contemporaneamente

- Nell' index bisogna fare un controllo se l' endpoint API e' online

- Fare pagina di login

- Nella pagina "Profilo" bisogna mettere il tasto per fare il logout

- In produzione impostare tramite .env app.run(debug=False) per lanciare flask

- Nel metodo getUserInfo non dovrei restituire l' hash password

- Per fare i test finche' non ci si decide con hosting usare una raspberry pi
blindata e supersicura che emetta il servizio web attraverso port forwarding

--------- TODO Refactoring ------------
- Modulare grafica
- Creare funzioni di fetch API per ogni chiamata
- Creare un context per alcune info globali (informazioni utente, altro)

------- PRIMA DI CARICARE SU STORE --------
- Fare privacy policy

------ TODO FUTURI --------
- Per la tabella News il campo target_name dovrebbe essere preso da una nuova tabella che specifica
i possibili valori disponibili 

----------- SPUNTI PER FUTURO ----------
- Permettere a chi usa l' app di inviare dei feedback per bug o suggerimenti tramite email od altro mezzo.
Per queste richieste sarebbe bello avere dei dati di contorno come il sistema operativo e il modello di cellulare
che invia tale feedback ed altri dati di telemetria